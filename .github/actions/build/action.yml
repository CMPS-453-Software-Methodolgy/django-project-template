name: build
description: 'Setup Django environment'

inputs:
    python-version:
        description: 'Python version'
        default: '3.11'
        required: false
    os:
        description: 'Operating system'
        default: 'ubuntu-latest'
        required: false

runs:
    using: composite
    steps:
        - name: Set up Python ${{ inputs.python-version }} on ${{ inputs.os }}
          id: setup-python
          uses: actions/setup-python@v5
          with:
              python-version: ${{ inputs.python-version }}

        - uses: actions/cache@v4
          if: startsWith(runner.os, 'Linux')
          with:
              path: ~/.cache/pip
              key: ${{ runner.os }}-pip-${{ inputs.python-version }}-${{ hashFiles('**/requirements.txt') }}
              restore-keys: |
                  ${{ runner.os }}-pip-

        - uses: actions/cache@v4
          if: startsWith(runner.os, 'macOS')
          with:
              path: ~/Library/Caches/pip
              key: ${{ runner.os }}-pip-${{ inputs.python-version }}-${{ hashFiles('**/requirements.txt') }}
              restore-keys: |
                  ${{ runner.os }}-pip-

        - uses: actions/cache@v4
          if: startsWith(runner.os, 'Windows')
          with:
              path: ~\AppData\Local\pip\Cache
              key: ${{ runner.os }}-pip-${{ inputs.python-version }}-${{ hashFiles('**/requirements.txt') }}
              restore-keys: |
                  ${{ runner.os }}-pip-

        - name: Install requirements
          run: |
              python -m pip install --upgrade pip
              pip install -r requirements.txt
          shell: bash

        - name: Django Migrate
          shell: bash
          run: |
              python manage.py migrate >/dev/null

        - name: Django Collectstatic
          shell: bash
          run: |
              python manage.py collectstatic --no-input >/dev/null
